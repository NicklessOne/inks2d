name: Build Android

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - id: check
        uses: EndBug/version-check@v2.1.0
        with:
          diff-search: true
          file-name: ./package.json

      - name: Setup Java
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install
        if: steps.check.outputs.changed == 'true'
        run: npm ci

      - name: Setup Android
        if: steps.check.outputs.changed == 'true'
        run: npm run setup:android && npx cap sync

      - name: Build app bundle
        if: steps.check.outputs.changed == 'true'
        run: cd android && ./gradlew bundle

      - name: Extract Android signing key from env
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        if: steps.check.outputs.changed == 'true'
        run: jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab release

      - name: Upload release bundle
        if: steps.check.outputs.changed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/bundle/release/app-release-signed.aab
          retention-days: 60
